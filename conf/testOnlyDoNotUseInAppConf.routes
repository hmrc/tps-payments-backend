# IF THE MICRO-SERVICE DOES NOT NEED ANY TEST-ONLY END-POINTS (ALWAYS PREFERRED) DELETE THIS FILE.

# !!!WARNING!!! This file MUST NOT be referenced in the "application.conf" file to avoid risk of rolling test routes in the production environment.
# If you need test routes when running tests in CI make sure that the profile for this micro-service (used by service-manager) defines this router as parameter.
# To do so add the following line to the micro-service profile: "-Dapplication.router=testOnlyDoNotUseInAppConf.Routes"
# To start the micro-service locally using the test routes run the following command: "sbt run -Dapplication.router=testOnlyDoNotUseInAppConf.Routes" 

# Any test-only end-point should be defined here.
# !!!WARNING!!! Every route defined in this file MUST be prefixed with "/test-only/". This is because NGINX is blocking every uri containing the string "test-only" in production.
# Failing to follow this rule may result in test routes deployed in production.

# Add all the application routes to the prod.routes file
->         /                          prod.Routes


# TODO, remove this, see who is using it and agree to not to call this endpoint
GET         /tps-payments-backend/test-only/remove-test-data        testonly.TestController.removeTestData()

# TODO, find out what is the reason for this endpoint, ask to use kibana and other test endpoints and then remove this endpoint
GET         /tps-payments-backend/test-only/find-by-reference/:ref  testonly.TestController.findByReference(ref: String)

#TODO, do we need this? Remove this. (Agree with Darren to use equivalent from app.routes and then delete this)
POST        /tps-payments-backend/test-only/store                   testonly.TestController.storeTpsPayments()

#this is probably used during tests to verify behaviour if there is emtpy denied-refs collection in mongo
DELETE      /tps-payments-backend/test-only/drop-denied-refs-collection      testonly.TestController.dropDeniedRefsDb()